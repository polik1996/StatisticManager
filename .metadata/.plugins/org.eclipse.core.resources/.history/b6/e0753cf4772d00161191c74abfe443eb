package web_view;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import model.Club;
import model.DataBaseModel;
import model.Division;
import model.Player;
import model.Team;
import view.DataBaseDialog;

/**
 * Servlet implementation class OperateTable
 */
@WebServlet("/OperateTable")
public class OperateTable extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public OperateTable() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String className = SelectTable.tableName;
		int operation = SelectOperation.operation;
		DataBaseModel obj = null;
		try {
			obj = (DataBaseModel) Class.forName(className).newInstance();
		} catch (Exception e) {
			e.printStackTrace();
		}
		if (operation == 4) {
			String id = request.getParameter("id");
			obj.setObjectId(Integer.parseInt(id));
		} else if (obj instanceof Division) {
			switch (operation) {
			case 2:
				int id = Integer.parseInt(request.getParameter("idDivision"));
				obj.setObjectId(id);
			case 1:
				int idDivision = Integer.parseInt(request.getParameter("idDivision"));
				((Division)obj).setIdDivision(idDivision);
				int countClubs = Integer.parseInt(request.getParameter("countClubs"));
				((Division) obj).setCountClubs(countClubs);
				String name = request.getParameter("name");
				((Division) obj).setName(name);
				String president = request.getParameter("president");
				((Division) obj).setPresident(president);
			}
		} else if (obj instanceof Club) {
			switch (operation) {
			case 2:
				int id = Integer.parseInt(request.getParameter("idClub"));
				obj.setObjectId(id);
			case 1:
				int idClub = Integer.parseInt(request.getParameter("idClub"));
				((Club) obj).setIdClub(idClub);
				int idDivision = Integer.parseInt(request.getParameter("idDivision"));
				Division divison = (Division)findObject(Division.class, idDivision);
				((Club) obj).setDivision(divison);
				String president = request.getParameter("president");
				((Club) obj).setPresident(president);
				String name = request.getParameter("name");
				((Club) obj).setName(name);
			}
		} else if (obj instanceof Team) {
			switch (operation) {
			case 2:
				int id = Integer.parseInt(request.getParameter("idTeam"));
				obj.setObjectId(id);
			case 1:
				int idTeam = Integer.parseInt(request.getParameter("idTeam"));
				((Team) obj).setIdTeam(idTeam);
				String rank = request.getParameter("rank");
				((Team) obj).setRank(rank);
				int idClub = Integer.parseInt(request.getParameter("idClub"));
				Club club = (Club)findObject(Club.class, idClub);
				((Team) obj).setClub(club);
			}
		} else if (obj instanceof Player) {
			switch (operation) {
			case 2:
				int id = Integer.parseInt(request.getParameter("idPlayer"));
				obj.setObjectId(id);
			case 1:
				int idPlayer = Integer.parseInt(request.getParameter("idPlayer"));
				((Player) obj).setIdPlayer(idPlayer);
				String name = request.getParameter("name");
				((Player) obj).setName(name);
				String nationality = request.getParameter("nationality");
				((Player) obj).setNationality(nationality);
				String position = request.getParameter("position");
				((Player) obj).setName(position);
				int idTeam = Integer.parseInt(request.getParameter("idTeam"));
				Team team = (Team)findObject(Team.class, idTeam);
				((Player) obj).setTeam(team);
			}
		}
		SelectTable.getController().operateObject(obj, SelectOperation.operation);
		request.setAttribute("model", SelectTable.getTableModel());
		request.setAttribute("tableName", SelectTable.tableName);
		request.getRequestDispatcher("showTable.jsp").forward(request, response);

	}

	private DataBaseModel findObject(Class clazz, int id) {
		DataBaseModel obj = null;
		for (Object x : SelectTable.getController().getObjectList(clazz)) {
			obj = (DataBaseModel) x;
			if (obj.getObjectId() == id)
				return obj;
		}
		return null;
}

	
	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
